{"version":3,"file":"static/js/754.f9bb943b.chunk.js","mappings":"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","sources":["components/TrendingFilmsList/TrendingFilmsList.jsx","components/TrendingFilmsList/TrendingFilmsList.styled.jsx","components/Searchbar/Searchbar.styled.jsx","components/Searchbar/Searchbar.jsx","pages/Movies.jsx"],"sourcesContent":["import { useLocation } from 'react-router-dom';\nimport {\n  StyledFilmsGallery,\n  StyledItem,\n  StyledPosterMovie,\n  StyledTitleMovie,\n} from './TrendingFilmsList.styled';\n\nexport const FilmsList = ({ films }) => {\n  const location = useLocation();\n  return (\n    <StyledFilmsGallery>\n      {films.map(film => {\n        return (\n          <StyledItem key={film.id}>\n            <StyledPosterMovie\n              width=\"300px\"\n              src={\n                film.poster_path\n                  ? `https://image.tmdb.org/t/p/w500${film.poster_path}`\n                  : `https://cdn.pixabay.com/photo/2013/07/12/15/33/cutting-150066_1280.png`\n              }\n              alt={film.title}\n            />\n            <StyledTitleMovie\n              state={{ from: location }}\n              to={`/movies/${film.id}`}\n            >\n              {film.title}\n            </StyledTitleMovie>\n          </StyledItem>\n        );\n      })}\n    </StyledFilmsGallery>\n  );\n};\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const StyledFilmsGallery = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 20px;\n  padding: 20px;\n  justify-content: center;\n`;\n\nexport const StyledItem = styled.li`\n  width: 250px;\n\n  padding: 5px;\n  border-radius: 5px;\n\n  background: #000000; /* fallback for old browsers */\n  background: -webkit-linear-gradient(\n    to right,\n    #434343,\n    #000000\n  ); /* Chrome 10-25, Safari 5.1-6 */\n  background: linear-gradient(\n    to right,\n    #434343,\n    #000000\n  ); /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */\n`;\n\nexport const StyledTrendingTitle = styled.h2`\n  text-transform: uppercase;\n  font-size: 32px;\n  text-align: center;\n  margin-left: auto;\n  margin-right: auto;\n  font-style: italic;\n  font-weight: 800;\n  color: rgba(255, 255, 255, 0.945);\n  box-shadow: 14px 14px 30px 0px rgba(0, 0, 0, 0.51);\n  -webkit-box-shadow: 14px 14px 30px 0px rgba(0, 0, 0, 0.51);\n  -moz-box-shadow: 14px 14px 30px 0px rgba(0, 0, 0, 0.51);\n`;\n\nexport const StyledTitleMovie = styled(Link)`\n  font-size: 20px;\n  color: #fdfdfd;\n  text-align: center;\n  font-weight: bold;\n  text-decoration: none;\n\n  &:hover {\n    color: orangered;\n  }\n`;\n\nexport const StyledPosterMovie = styled.img`\n  max-width: 100%;\n  height: auto;\n  border-radius: 5px;\n  margin-bottom: 5px;\n`;\n","import styled from 'styled-components';\n\nexport const StyledForm = styled.header`\n  form {\n    display: flex;\n    align-items: center;\n    width: 100%;\n    max-width: 600px;\n    background-color: #fff;\n    border-radius: 3px;\n    overflow: hidden;\n    margin: auto;\n  }\n\n  input {\n    display: inline-block;\n    width: 100%;\n    font: inherit;\n    font-size: 20px;\n    border: none;\n    outline: none;\n    padding-left: 4px;\n    padding-right: 4px;\n  }\n\n  input::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n\n  button {\n    display: inline-block;\n    width: 48px;\n    height: 48px;\n    border: 0;\n    background-size: 40%;\n    background-repeat: no-repeat;\n    background-position: center;\n\n    transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n    cursor: pointer;\n    outline: none;\n  }\n\n  button:hover {\n    color: orangered;\n  }\n`;\n","import { useEffect, useState } from 'react';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { StyledForm } from './Searchbar.styled';\nimport { FaSearch } from 'react-icons/fa';\nimport { Loader } from 'components/Loader/Loader';\nimport { toast } from 'react-toastify';\nimport { useSearchParams } from 'react-router-dom';\nimport { fetchMovie } from 'components/Api';\nimport { FilmsList } from 'components/TrendingFilmsList/TrendingFilmsList';\n\nexport const Searchbar = () => {\n  const [films, setFilms] = useState([]);\n  const [spiner, setSpiner] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query');\n\n  useEffect(() => {\n    if (!query) {\n      return;\n    }\n    const getFilms = async () => {\n      try {\n        setSpiner(true);\n        const searchFilms = await fetchMovie(query);\n        if (searchFilms.length === 0) {\n          toast.error('No movies found for your query!');\n        }\n        setFilms(searchFilms);\n      } catch (error) {\n        toast.error(error.message);\n      } finally {\n        setSpiner(false);\n      }\n    };\n\n    getFilms();\n  }, [query]);\n\n  const onFormSubmit = evt => {\n    evt.preventDefault();\n    const value = evt.currentTarget.elements.searchId.value;\n    setSearchParams({ query: value });\n  };\n\n  return (\n    <>\n      <StyledForm className=\"searchbar\">\n        <form onSubmit={onFormSubmit}>\n          <button type=\"submit\" className=\"button\">\n            <FaSearch />\n          </button>\n\n          <input\n            className=\"input\"\n            name=\"searchId\"\n            type=\"text\"\n            placeholder=\"Search movies\"\n          />\n        </form>\n      </StyledForm>\n      {spiner && <Loader />}\n      <FilmsList films={films} />\n    </>\n  );\n};\n","import { Searchbar } from 'components/Searchbar/Searchbar';\n\nconst Movies = () => {\n  return (\n    <div>\n      <Searchbar />\n    </div>\n  );\n};\nexport default Movies;\n"],"names":["FilmsList","_ref","films","location","useLocation","_jsx","StyledFilmsGallery","children","map","film","_jsxs","StyledItem","StyledPosterMovie","width","src","poster_path","concat","alt","title","StyledTitleMovie","state","from","to","id","styled","_templateObject","_taggedTemplateLiteral","_templateObject2","StyledTrendingTitle","_templateObject3","Link","_templateObject4","_templateObject5","StyledForm","Searchbar","_useState","useState","_useState2","_slicedToArray","setFilms","_useState3","_useState4","spiner","setSpiner","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","query","get","useEffect","getFilms","_asyncToGenerator","_regeneratorRuntime","_callee","searchFilms","_context","prev","next","fetchMovie","sent","length","toast","t0","message","finish","stop","apply","arguments","_Fragment","className","onSubmit","evt","preventDefault","value","currentTarget","elements","searchId","type","FaSearch","name","placeholder","Loader"],"sourceRoot":""}